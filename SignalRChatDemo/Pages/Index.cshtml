@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="container">
    <div>
        <input type="button" id="joinGroup" value="Join Private Group" />
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-2">User</div>
        <div class="col-4"><input type="text" id="userInput" /></div>
    </div>
    <div class="row">
        <div class="col-2">Message</div>
        <div class="col-4"><input type="text" id="messageInput" /></div>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-6">
        <ul id="messagesList"></ul>
    </div>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>

<script>

    "use strict";

    //var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:5001/chatHub").build();
    //var connection = new signalR.HubConnectionBuilder().withUrl("https://duellos.org/chatHub").build();

    //Disable the send button until connection is established.
    document.getElementById("sendButton").disabled = true;


    //tüm clientlara gönderilen herşey burada okunur. yani gruba join olursan clients.all ve gruptaki mesajlar dinlenir.
    //gruba join olmazsan clients.all.send olan mesajlar akar sadece.
    //await _chatHub.Clients.All.SendAsync("ReceiveMessage", model.MessageText);
    // connection.on("ReceiveMessage", function (user, message) {
    //     var li = document.createElement("li");
    //     document.getElementById("messagesList").appendChild(li);
    //     // We can assign user-supplied strings to an element's textContent because it
    //     // is not interpreted as markup. If you're assigning in any other way, you
    //     // should be aware of possible script injection concerns.
    //     li.textContent = `${user} says ${message}`;
    // });
    //resp.UserId, resp.UserName, resp.ProfilePicture, model.MessageText
    connection.on("ReceiveMessage", function (response) {
        var li = document.createElement("li");
        document.getElementById("messagesList").appendChild(li);
        // We can assign user-supplied strings to an element's textContent because it
        // is not interpreted as markup. If you're assigning in any other way, you
        // should be aware of possible script injection concerns.
        li.textContent = 'Param1 : ' + JSON.stringify(response)
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    // connection.start().then(res => {
    //     connection.invoke("JoinGroup", "025f70d2-8ae3-487c-a407-d3b197c5de01")  //JoinGroup is C# method name
    //         .catch(err => {
    //             console.log(err);
    //         });
    // }).catch(err => {
    //     console.log(err);
    // });;

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        //HubConnection ı sağlayan yerdeki ChatHub.cs deki sınıflar. Burada Localde mesela SendMessage var. ama duello da bu yok, uzaktaki yani duellodakileri kullanmak icin yazmak lazım.
        //bu bu şekilde durursa uzaktakinde SendMessage olmadığı icin gönderme işlemi yapmayacaktır.
        connection.invoke("SendMessage", user, message).catch(function (err) {

            //connection.invoke("ReceiveMessage", user, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });


    //özel bir gruba yollanan mesajları dinlemek icin ilk gruba join olmak lazım. Guid id var olan bir grubumun id si
    //await _chatHub.Clients.Group(groupName).SendAsync("ReceiveMessage", model.MessageText);
    document.getElementById("joinGroup").addEventListener("click", function (event) {
        connection.invoke("JoinChatRoom", "025f70d2-8ae3-487c-a407-d3b197c5de01").catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });
</script>
